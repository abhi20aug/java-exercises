However, there are two distinct types of multitasking: 
1. processbased
2. thread-based. 

A process is, a program that is executing. Thus, process-based multitasking is the feature that allows your
computer to run two or more programs concurrently. For example, process-based multitasking
enables you to run the Java compiler at the same time that you are using a text editor. 
In processbased multitasking, a program is the smallest unit of code that can be dispatched by the
scheduler.

In a thread-based multitasking environment, the thread is the smallest unit of dispatchable code. 
This means that a single program can perform two or more tasks simultaneously. 
For instance, a text editor can format text at the same time that it is printing, as long as these
two actions are being performed by two separate threads. 

Threads exist in several states. 
A thread can be running. 
It can be ready to run as soon as it gets CPU time. 
A running thread can be suspended, which temporarily suspends its activity.
A suspended thread can then be resumed, allowing it to pick up where it left off. 
A thread can be blocked when waiting for a resource. 
At any time, a thread can be terminated, which halts its execution immediately. Once terminated, a thread cannot be resumed.  


